<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MyInfoMapper">
	<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap type="study.shop.cidermarket.model.Member" id="myInfoMap">
		<result property="membno" column="membno" />
		<result property="nickname" column="nickname" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="tel" column="tel" />
		<result property="joindate" column="joindate" />
		<result property="editdate" column="editdate" />
		<result property="sms" column="sms" />
		<result property="shopaddress" column="shopaddress" />
		<result property="intro" column="intro" />
		<result property="outmember" column="outmember" />
		<result property="rate" column="rate" />
		<result property="filepath" column="filepath" />
		<result property="newpassword" column="newpassword" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.shop.cidermarket.model.Member"
		resultMap="myInfoMap">
		SELECT membno, nickname, email, password, tel,
			DATE_FORMAT(joindate, '%Y-%m-%d %H:%i:%S') AS joindate, 
			DATE_FORMAT(editdate, '%Y-%m-%d %H:%i:%S') AS editdate,
			sms, shopaddress, intro, outmember, rate,
			(SELECT filepath FROM files WHERE fileno=(SELECT MIN(fileno) FROM files WHERE refid=membno AND reftable='member')) AS filepath
		FROM member
		WHERE membno=#{membno}
	</select>

	<select id="selectCountAll"
		parameterType="study.shop.cidermarket.model.Member"
		resultType="int">
		SELECT COUNT(nickname) FROM member
		where nickname=#{nickname}

	</select>
	
	<select id="selectCountShopaddress"
		parameterType="study.shop.cidermarket.model.Member"
		resultType="int">
		SELECT COUNT(shopaddress) FROM member
		where shopaddress=#{shopaddress}

	</select>
	
	<select id="selectCountEmail"
		parameterType="study.shop.cidermarket.model.Member"
		resultType="int">
		SELECT COUNT(email) FROM member
		where email=#{email}

	</select>
	<select id="selectCountTel"
		parameterType="study.shop.cidermarket.model.Member"
		resultType="int">
		SELECT COUNT(tel) FROM member
		where tel=#{tel}

	</select>	
	
	<select id="selectCheckPassword"
		parameterType="study.shop.cidermarket.model.Member"
		resultType="int">
		SELECT COUNT(MD5(password)) FROM member
		
		<!-- oldpassword와 기존 password 비교 일치하면 1 아니면 0  -->
		where membno=#{membno} and password=MD5(#{password})
		
	</select>	
	
	<!-- 닉네임변경 -->
	<update id="updateNameItem"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			nickname=#{nickname}
		WHERE membno=#{membno}
	</update>
		<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateIntro"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			intro=#{intro}
		WHERE membno=#{membno}
	</update>
	<update id="updateShopaddress"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			shopaddress=#{shopaddress}
		WHERE membno=#{membno}
	</update>
	<update id="updateEmail"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			email=#{email}
		WHERE membno=#{membno}
	</update>
		<update id="updateTel"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			tel=#{tel}
		WHERE membno=#{membno}
	</update>
		<!-- ID변경 -->
	<update id="updateId"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			id=#{id}
		WHERE membno=#{membno}
	</update>
		<!-- 연락처변경 -->
		<!-- 비밀번호 변경 -->
	<update id="updatePassword"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			password=MD5(#{password})
		WHERE membno=#{membno}
	</update>
	
	<update id="updateSMS"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			sms=#{sms}
		WHERE membno=#{membno}
	</update>
	
		<update id="updateOutmember"
		parameterType="study.shop.cidermarket.model.Member">
		UPDATE member SET
			outmember=#{outmember}
		WHERE membno=#{membno}
	</update>


</mapper>