<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReplyMapper">

	<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap type="study.shop.cidermarket.model.Reply" id="replyMap">
		<result property="replyno" column="replyno" />
		<result property="prodno" column="prodno" />
		<result property="writer" column="writer" />
		<result property="content" column="content" />
		<result property="regdate" column="regdate" />
		<result property="editdate" column="editdate" />
		<result property="nickname" column="nickname" />
		<result property="filepath" column="filepath" />
		<result property="redelete" column="redelete" />
		<result property="outmember" column="outmember" />
		<result property="shopaddress" column="shopaddress" />
	</resultMap>	
	<!-- 댓글 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.shop.cidermarket.model.Reply"
		resultMap="replyMap">
		SELECT r.replyno, r.prodno, r.writer, r.content, r.regdate, r.editdate, r.redelete, nickname, outmember, shopaddress,
		(SELECT filepath FROM files WHERE fileno=(SELECT MIN(fileno) FROM files WHERE refid=membno AND reftable='member')) AS filepath
		FROM reply r
		INNER JOIN member m ON r.writer=m.membno
		WHERE r.prodno=#{prodno}
		
		ORDER BY r.regdate ASC
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.shop.cidermarket.model.Reply"
		useGeneratedKeys="true" keyProperty="replyno">
		INSERT INTO reply (
		prodno, writer, content, regdate, editdate
		) VALUES (
		#{prodno}, #{writer}, #{content}, now(), now()
		)
	</insert>
	
	<!-- 보관함에서 삭제를 위한 기능 정의 (실제로 삭제하지 않고 데이터 값을 바꾼다). -->	
	<update id="updateItem"
		parameterType="study.shop.cidermarket.model.Reply">
		UPDATE reply SET
			redelete= 'Y'
		WHERE replyno=#{replyno}
	</update>	
	
	<!-- 회원 탈퇴 시 더미데이터로 수정을 위한 기능 정의 (실제로 삭제하지 않고 데이터 값을 바꾼다). -->	
	<update id="updateItemByMemebno"
		parameterType="study.shop.cidermarket.model.Reply">
		UPDATE reply SET
			writer= 999
		WHERE writer=#{writer}
	</update>	
	
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteProductItem"
		parameterType="study.shop.cidermarket.model.Membprod">
		DELETE FROM reply WHERE prodno=#{prodno}
	</delete>
</mapper>