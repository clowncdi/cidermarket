<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RecordMapper">

	<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap type="study.shop.cidermarket.model.Record" id="recordMap">
		<result property="recono" column="recono" />
		<result property="prodno" column="prodno" />
		<result property="buyer" column="buyer" />
		<result property="nickname" column="nickname" />
		<result property="tradecon" column="tradecon" />
		<result property="refund" column="refund" />
		<result property="how" column="how" />
		<result property="confirmdate" column="confirmdate" />
		<result property="name" column="name" />
		<result property="tel" column="tel" />
		<result property="address" column="address" />
		<result property="pay" column="pay" />
		<result property="filepath" column="filepath" />
		<result property="subject" column="subject" />
		<result property="price" column="price" />
		<result property="seller" column="seller" />
		<result property="revino" column="revino" />
	</resultMap>	
	<!-- 특정회원의 거래 완료 수를 위한 기능 정의 -->
	<select id="selectCount"
		parameterType="study.shop.cidermarket.model.Record"
		resultType="int">
		SELECT (SELECT COUNT(*) FROM record WHERE tradecon = 'W' AND buyer=#{buyer})
		+(SELECT COUNT(*) FROM product WHERE tradecon='W' AND seller=#{buyer})
	</select>
	
	<!-- 특정회원의 거래중 수를 위한 기능 정의 -->
	<select id="selectSellIngCount"
		parameterType="study.shop.cidermarket.model.Record"
		resultType="int">
		SELECT COUNT(*) 
		FROM record r
		INNER JOIN product p ON r.prodno=p.prodno
		WHERE r.tradecon = 'J' AND p.seller=#{seller}
	</select>
	
	<!-- 특정회원의 거래완료 수를 위한 기능 정의 -->
	<select id="selectSellEndCount"
		parameterType="study.shop.cidermarket.model.Record"
		resultType="int">
		SELECT COUNT(*) 
		FROM record r
		INNER JOIN product p ON r.prodno=p.prodno
		WHERE r.tradecon = 'W' AND p.seller=#{seller}
	</select>
	
	<!-- 필요한부분                             -->
	<select id="selectSellEndCountByMonth"
		parameterType="study.shop.cidermarket.model.Record"
		resultType="int">
		select month(confirmdate) as Month, count(recono)
		from record r
		inner join product p on r.prodno=p.prodno
		 WHERE r.tradecon = 'W' AND p.seller=#{seller}
		group by Month;
		order by month desc;
	</select>
	
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.shop.cidermarket.model.Record"
		resultMap="recordMap">
		SELECT recono, r.how, p.prodno, p.subject, p.price, r.refund, r.tradecon, r.confirmdate, p.seller, r.buyer, 
			(SELECT nickname FROM member WHERE membno=buyer) AS nickname,
			(SELECT filepath FROM files WHERE fileno=(SELECT MIN(fileno) FROM files WHERE refid=r.prodno AND reftable='product')) AS filepath
		FROM record r
		INNER JOIN product p ON r.prodno=p.prodno
		INNER JOIN member m ON r.buyer=m.membno
		WHERE r.tradecon in('W', 'A') AND recono=#{recono}
	</select>
	
	<!-- 판매자 거래중 다중행 조회를 위한 기능 정의 -->
	<select id="selectSellIngList"
		parameterType="study.shop.cidermarket.model.Record"
		resultMap="recordMap">
		SELECT recono, r.how, p.prodno, p.subject, p.price, r.refund, r.tradecon, p.seller, r.buyer,
			(SELECT nickname FROM member WHERE membno=buyer) AS nickname,  
			(SELECT filepath FROM files WHERE fileno=(SELECT MIN(fileno) FROM files WHERE refid=r.prodno AND reftable='product')) AS filepath
		FROM record r
		INNER JOIN product p ON r.prodno=p.prodno
		WHERE r.tradecon='J' AND p.seller=#{seller}
		
		ORDER BY r.prodno DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 판매자 거래완료 다중행 조회를 위한 기능 정의 -->
	<select id="selectSellEndList"
		parameterType="study.shop.cidermarket.model.Record"
		resultMap="recordMap">
		SELECT recono, r.how, p.prodno, p.subject, p.price, r.refund, r.tradecon, p.seller, r.buyer,
			(SELECT nickname FROM member WHERE membno=buyer) AS nickname,  
			r.confirmdate, r.name, r.tel, r.address, r.pay,
			(SELECT filepath FROM files WHERE fileno=(SELECT MIN(fileno) FROM files WHERE refid=r.prodno AND reftable='product')) AS filepath,
			(SELECT revino FROM review WHERE prodno=r.prodno AND sender=#{seller}) AS revino
		FROM record r
		INNER JOIN product p ON r.prodno=p.prodno
		INNER JOIN member m ON r.buyer=m.membno
		WHERE r.tradecon in ('W', 'A') AND p.seller=#{seller}
		
		ORDER BY r.prodno DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 직거래 거래확정 갱신을 위한 기능 정의 -->
	<update id="updateTradeconJWItem"
		parameterType="study.shop.cidermarket.model.Record">
		UPDATE record SET
			tradecon='W', confirmdate=now(), buyer=#{buyer}, name=#{nickname}
		WHERE prodno=#{prodno} AND tradecon='J'
	</update>
	<!-- 직거래 거래확정시 상품테이블 갱신을 위한 기능 정의 -->
	<update id="updateProductTradeconJWItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			tradecon='W'
		WHERE prodno=#{prodno}
	</update>
	
	
	
	<!-- 택배거래 거래확정 갱신을 위한 기능 정의 -->
	<update id="updateTradeconTWItem"
		parameterType="study.shop.cidermarket.model.Record">
		UPDATE record SET
			tradecon='A', confirmdate=now(), buyer=#{buyer}
		WHERE recono=#{recono} AND tradecon='J' AND not refund='J';
	</update>

	
	<!-- 거래취소 갱신을 위한 기능 정의 -->
	<update id="updateTradeconSItem"
		parameterType="study.shop.cidermarket.model.Record">
		UPDATE record SET
			tradecon='S', confirmdate=now()
		WHERE recono=#{recono} AND tradecon='J' AND not refund='J';
	</update>
		
	<!-- 거래취소시 상품테이블 갱신을 위한 기능 정의 -->
	<update id="updateProductTradeconSItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			tradecon='J'
		WHERE prodno=#{prodno}
	</update>
	
	<!-- 반품승인 갱신을 위한 기능 정의 -->
	<update id="updateRefundOkItem"
		parameterType="study.shop.cidermarket.model.Record">
		UPDATE record SET
			refund='W'
		WHERE recono=#{recono}
	</update>
	
	<!-- 반품거절 갱신을 위한 기능 정의 -->
	<update id="updateRefundXItem"
		parameterType="study.shop.cidermarket.model.Record">
		UPDATE record SET
			refund='X'
		WHERE recono=#{recono}
	</update>
	
	
	
	
</mapper>